@model ADS.LAPEM.Web.Areas.Catalogo.Models.CalibracionViewModel
@using ADS.LAPEM.Services.Common;

@{
    ViewBag.Title = "_Form";
}

@using (Html.BeginForm("Create", "Calibracion", FormMethod.Post, new { id = "frmCalibracion" }))
{ 
    <p>@Html.ValidationSummary()</p>
    <div>
        <ul>
            @foreach (string mensaje in Model.Mensajes)
            { 
                <li style="color: red">@mensaje</li>
            }
        </ul>
    </div>
    
    if (Model.Calibracion.Id > 0)
    { 
        <p>@Html.HiddenFor(x => x.Calibracion.Id)</p>
    }
    
    <div>
        <fieldset>
            <legend>ABC CALIBRACIÓN</legend>

            <div class="editor-label">
                 @Html.Label("*Equipo: ")
            </div>
            <div class="editor-field">
                @Html.ValidationMessageFor(x => x.Calibracion.EquipoId, "*")
                @Html.DropDownListFor(x => x.Calibracion.EquipoId, Model.Equipos, IncidentManagerConstants.TextoDefaultCombo, new { @class = "inputCombo" })
            </div>

            <div class="editor-label">
                 @Html.Label("Fecha Calibracion: ")
            </div>
            <div class="editor-field">
                @Html.ValidationMessageFor(x => x.Calibracion.FechaCalibracion, "*")
                @Html.TextBoxFor(x => x.Calibracion.FechaCalibracion, new { @class = "datepicker"})
            </div>

            <div class="editor-label">
                 @Html.Label("Fecha Vencimiento Calib: ")
            </div>
            <div class="editor-field">
                @Html.ValidationMessageFor(x => x.Calibracion.FechaVencimiento, "*")
                @Html.TextBoxFor(x => x.Calibracion.FechaVencimiento, new { @class = "datepicker" })
            </div>

            <div class="editor-label">
                 @Html.Label("*No Informe Calib: ")
            </div>
            <div class="editor-field">
                @Html.ValidationMessageFor(x => x.Calibracion.NoInformeCalib, "*")
                @Html.TextBoxFor(x => x.Calibracion.NoInformeCalib, new { @class = "input100" })
            </div>

            <div class="editor-label">
                 @Html.Label("PDF Informe: ")
            </div>
            <div class="editor-field">
                @Html.ValidationMessageFor(x => x.Calibracion.PDFInforme, "*")
                @Html.TextBoxFor(x => x.Calibracion.PDFInforme, new { @class = "input200" })
            </div>

            <div class="editor-label">
                 @Html.Label("*Proveedor: ")
            </div>
            <div class="editor-field">
                @Html.ValidationMessageFor(x => x.Calibracion.ProveedorId, "*")
                @Html.DropDownListFor(x => x.Calibracion.ProveedorId, Model.Proveedores, IncidentManagerConstants.TextoDefaultCombo, new { @class = "inputCombo" })
            </div>

            <div class="editor-label">
                 @Html.Label("Comentarios: ")
            </div>
            <div class="editor-field">
                @Html.ValidationMessageFor(x => x.Calibracion.Comentarios, "*")
                @Html.TextAreaFor(x => x.Calibracion.Comentarios, new { @class = "inputTextArea" })
            </div>
        </fieldset>
       
    </div>
}